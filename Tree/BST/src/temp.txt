static class Node{
        int data;
        AddAllGreaterValues.Node left;
        AddAllGreaterValues.Node right;

        public Node(int val){
            this.data = val;
            this.left = null;
            this.right = null;
        }
    }


    public static AddAllGreaterValues.Node insertNode(AddAllGreaterValues.Node root, int value){
        if(root == null){
            root = new AddAllGreaterValues.Node(value);
            return root;
        }

        if(value > root.data){
            root.right = insertNode(root.right, value);
        }

        if(value<root.data){
            root.left = insertNode(root.left,value);
        }

        return root;
    }

    public static boolean search(AddAllGreaterValues.Node root, int key){
        if(root==null){
            return false;
        }
        if(key == root.data){
            return true;
        }
        boolean right = false,left = false;
        if(key > root.data){
            right = search(root.right,key);
        }
        if(key < root.data){
            left =  search(root.left,key);
        }


        return left || right;
    }

    public static void inorder(AddAllGreaterValues.Node root){
        if(root!=null){
            inorder(root.left);
            System.out.print(root.data+" ");
            inorder(root.right);
        }
    }